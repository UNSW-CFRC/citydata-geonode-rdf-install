##############################################################
#
# Configuration to expose a graph of relationships between spatial reference sources and online resource APIs using these identifiers.
#
# Author: Rob Atkinson, CSIRO
#
#
# Copyright (c) CSIRO 2012
# Re-use permitted according to Creative Commons Attribution 3.0 Australia (CC BY 3.0)
# see <http://creativecommons.org/licenses/by/3.0/au/>
#
# Contact: Robert A Atkinson
#          CSIRO Land and Water
#          Australia
#          rob.atkinson "at" csiro.au
#
# imports the LID metadata spec - ability to specify what reosurces are available for a given object
#
##############################################################

## Common prefixes - don't change these.
@prefix api:     <http://purl.org/linked-data/api/vocab#> .
@prefix dc:      <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix elda:    <http://www.epimorphics.com/vocabularies/lda#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos:    <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix dcat: <https://www.w3.org/ns/dcat#> .

@prefix lid:    <http://id.sirf.net/def/schema/lid/> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix qb: <http://purl.org/linked-data/cube#> .
# Data network API
@prefix sirf: <http://id.sirf.net/def/schema/sirf-metamodel/> .

# These two break if made relative to @base:
@prefix uquol: 	<http://cfdev.intersect.org.au/def/voc/iso37120/> .
@prefix gl: <http://cfdev.intersect.org.au/def/datasets/spatial/> .

@base <http://cfdev.intersect.org.au/def/> .
#
@prefix uadi:  <api/uadi#> .

# must import the api for the LID spec because as an API this has the responsibility to advertise itself as an endpoint

# and a basic API...
#
uadi:api a api:API;
    api:maxPageSize "1000";
    api:defaultPageSize "200";
    api:defaultFormatter [
        a api:XsltFormatter;
        api:name "html";
        api:stylesheet "lda-assets/resources/siss-default/transform/ashtml-sissvoc.xsl";
        api:mimeType "text/html";
    ];
    
    api:variable [api:name "webapp"; api:value "/dna"];

    api:variable
        [api:name "SISSDefaultResourceDirBase"; api:value "{webapp}/lda-assets/resources/siss-default/"],
        [api:name "_resourceRoot"; api:value "{webapp}/"],
        [api:name "myResourceDirBase"; api:value "{webapp}/lda-assets/resources/dna/"],
        [api:name "serviceTitle"; api:value "UADI API"],
        [api:name "serviceAuthor"; api:value "Rob Atkinson"],
        [api:name "serviceAuthorEmail"; api:value "rob.atkinson@csiro.au"],
        [api:name "serviceHomePage"; api:value "http://sirf.net"];
		#
		# set up default searches for this - in XSL form
		#
	   api:variable [api:name "searchTargetLabel"; api:value "Find Dataset"];
	   api:variable [api:name "searchTarget"; api:value "dna/finddataset"];
	   
    api:endpoint uadi:node, uadi:graph, uadi:map ;
    rdfs:label "UADI API"@en;
    foaf:primaryTopic <http://sirf.net/>;
    rdfs:seeAlso <http://portal.sirf.net/>;

	api:sparqlEndpoint <http://cfdev.intersect.org.au:8080/rdf4j-server/repositories/uquol>
    .

<http://cfdev.intersect.org.au:8080/rdf4j-server/repositories/uquol> elda:supportsNestedSelect true .

uadi:node a api:ListEndpoint;
    rdfs:label "UQUOL concept and parent";
    rdfs:comment "Returns a concept in the UQUOL scheme, plus its parent concept";
    api:exampleRequestPath "/node?concept=Homeless";
    api:uriTemplate "/node?concept={concept}";
    api:selector [
        api:where
          """SELECT ?item
          WHERE {
              ?item a skos:concept;
                    skos:inScheme uquol: ;
                    skos:prefLabel ?x FILTER(str(?x) = ?concept) .
          }""";
        ];
        api:defaultViewer uadi:graphViewer;
    .

uadi:graph a api:ListEndpoint;
    rdfs:label "Complete UQUOL graph";
    rdfs:comment "Returns an array of all nodes within the uquol scheme";
    api:exampleRequestPath "/graph";
    api:uriTemplate "/graph";
    api:selector [
        api:where
          """SELECT ?item
          WHERE {
              ?item a skos:concept;
                    skos:inScheme uquol:
          }""";
        ];
        api:defaultViewer uadi:graphViewer;
    .

uadi:map a api:ListEndpoint;
    rdfs:label "Map a concept";
    rdfs:comment "Returns properties of datasets with a heatmap technical feature, to generate a WMS request for a default choropleth map of a concept";
    api:exampleRequestPath "/map?concept=Homeless";
    api:uriTemplate "/map?concept={concept}";
    api:selector [
        api:where
          """SELECT DISTINCT ?item
          WHERE {
              ?item a void:Dataset ; 
                    void:feature gl:heatmap ;
                    qb:structure ?struct .
              ?struct qb:component ?dsMeasure .
              ?dsMeasure qb:measure ?measure .
              ?measure qb:concept ?conceptId .
              ?conceptId skos:prefLabel ?x FILTER(str(?x) = ?concept) .
          }""";
        ];
        api:defaultViewer uadi:mapViewer;
    .

# CUSTOM VIEWERS:

uadi:graphViewer a api:Viewer;
    api:name "Properties returned in graph view";
    api:property skos:prefLabel, skos:topConceptOf, (skos:broader skos:prefLabel)   .

uadi:mapViewer a api:Viewer;
    api:name "Properties returned in map view";
    api:property gl:wxsServer, gl:layer, dcat:extent  .